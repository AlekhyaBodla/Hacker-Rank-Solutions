import java.util.Stack;

public class ParenthesisCheck {

	public static void main(String[] args) {

		String str = "[()]{}{[()()]()}";
		str = "{[>()<<}{";
		boolean check = validateString(str);
		if (check)
			System.out.println(str + "  string is valid");
		else
			System.out.println(str + " invalid String");
	}

	public static boolean validateParenthesis(String str) {
		Stack<Character> open = new Stack<>();

		char[] arr = str.toCharArray();
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] == '{' || arr[i] == '[' || arr[i] == '(' || arr[i] == '<')
				open.push(arr[i]);
			else {
				if (arr[i] == '}' && open.peek() == '{')
					open.pop();
				else if (arr[i] == ']' && open.peek() == '[')
					open.pop();
				else if (arr[i] == ')' && open.peek() == '(')
					open.pop();
				else if (arr[i] == '>' && open.peek() == '<')
					open.pop();
				else
					return false;
			}

		}
		return true;

	}

}
